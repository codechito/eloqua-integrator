<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>Configure Decision Service</title>

    <link href="/eloqua-service/assets/css/bootstrap.min.css" rel="stylesheet">
    <link href="/eloqua-service/assets/css/main.css" rel="stylesheet">
    <link rel="stylesheet" href="https://unpkg.com/vue-select@3.0.0/dist/vue-select.css">
  </head>
  <body>
  <div class="disabler"></div>
  <div class="container" id="receivesmsaction" style="width: 600px;">
    <center>
      <form method="post">
        <br/><br/>
        <h4 style="font-size: 20px; font-weight: bold; text-align: center;">
          ✉️ Check for Received SMS
        </h4>
        <br/>
        <div v-if="status.success || status.error" v-bind:class="{ 'alert-success': status.success, 'alert-danger': status.error, 'in': fade }" class="alert alert-dismissible fade" role="alert">
          {{ status.success || status.error }}
        </div>

        <div class="row">
          <div class="col-md-6" style="display: inline-block;width: 280px;vertical-align: top;margin-left: -10px;">
            <div class="form-group">
              <label for="evaluation_period" style="float: left;">How long should we wait?</label>
              <select style="width: 275px;" v-model="instance.evaluation_period" class="form-control">
                <option v-for="hour in evaluation" v-bind:value="hour">{{ hour }} HR</option>
              </select>
            </div>
          </div>
          <div class="col-md-6" style="width: 280px;float: right;margin-right: -15px;">
            <div class="form-group">
              <label for="text_type" style="float: left;">What type of text?</label>
              <select v-model="instance.text_type" class="form-control">
                <option v-for="type in texttype" v-bind:value="type">{{ type }}</option>
              </select>
            </div>
          </div>
        </div>

        <div class="row">
          <div class="col-md-6" style="display: inline-block;width: 280px;vertical-align: top;margin-left: 15px;text-align:left;">
            <div class="form-group">
              <label for="message" style="margin-left: -15px;">Custom Object Mapping</label><br>
              <v-select  
                label="name"
                style="width: 275px;height: 34px;margin-left: -20px;"
                v-model="instance.custom_object_id" 
                :reduce="element => element.id" 
                :options="comap" 
                @search="fetchOptionsmap" 
                @input="getFields()">
              </v-select>
            </div>
          </div>
          <div class="col-md-6" style="width: 280px;float: right;margin-right: -30px;">
            <div class="form-group" v-show="instance.text_type == 'Keyword'">
              <label for="keyword" style="float: left;">Keyword</label>
              <input type="text" v-model="instance.keyword" class="form-control"/>
            </div>
          </div>
        </div>

        <div class="row">
          <div class="col-md-6" style="display: inline-block;width: 280px;vertical-align: top;margin-left: 15px;text-align:left;">
            <div class="form-group" v-show="instance.custom_object_id">
              <label for="message" style="margin-left: -15px;">Map Contact Mobile To</label><br/>
              <select v-model="instance.mobile_field" style="width:270px;display: inline;margin-left: -20px;" class="form-control">
                <option value="">-- Select --</option>
                <option v-for="field in cdofields" v-bind:value="field.internalName">{{ field.name }}</option>
              </select>
            </div>
          </div>
          <div class="col-md-6" style="width: 280px;float: right;margin-right: -30px; text-align:left;">
            <div class="form-group" v-show="instance.custom_object_id">
              <label for="message" style="margin-left: -15px;">Map Contact Email To</label><br/>
              <select v-model="instance.email_field" style="width:255px; margin-left: -20px;" class="form-control">
                <option value="">-- Select --</option>
                <option v-for="field in cdofields" v-bind:value="field.internalName">{{ field.name }}</option>
              </select>
            </div>
          </div>
        </div>

        <div class="row">
          <div class="col-md-6" style="display: inline-block;width: 280px;vertical-align: top;margin-left: 15px; text-align:left;">
            <div class="form-group" v-show="instance.custom_object_id">
              <label for="message" style="margin-left: -15px;">Map Contact Reply To</label><br/>
              <select v-model="instance.response_field" style="width:270px; margin-left: -20px;" class="form-control">
                <option value="">-- Select --</option>
                <option v-for="field in cdofields" v-bind:value="field.internalName">{{ field.name }}</option>
              </select>
            </div>
          </div>
          <div class="col-md-6" style="width: 280px;float: right;margin-right: -30px; text-align:left;">
            <div class="form-group" v-show="instance.custom_object_id">
              <label for="message" style="margin-left: -15px;">Map Campaign Title To</label><br/>
              <select v-model="instance.title_field" style="width:255px; margin-left: -20px;" class="form-control">
                <option value="">-- Select --</option>
                <option v-for="field in cdofields" v-bind:value="field.internalName">{{ field.name }}</option>
              </select>
            </div>
          </div>
        </div>

        <button id="btnSave" type="button" v-on:click="saveInstance()" class="btn btn-default" style="margin: 0 auto; display: block;">SAVE</button>
      </form>
    </center>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/vue@2.6.11"></script>
  <script src="/eloqua-service/assets/js/axios.min.js"></script>
  <script src="https://unpkg.com/vue-select@3.0.0"></script>

  <script type="text/javascript">
    var instance = <%-JSON.stringify(instance)%>;
    Vue.component('v-select', VueSelect.VueSelect);
    var custom_objects = <%-JSON.stringify(custom_objects)%>;
    var comap = JSON.parse(JSON.stringify(custom_objects.elements));

    var app = new Vue({
      el: '#receivesmsaction',
      data: {
        evaluation: Array.from({length: 168}, (_, i) => i + 1),
        texttype: ["Anything", "Keyword"],
        instance: instance,
        consumer: <%-JSON.stringify(consumer)%>,
        status: {},
        custom_objects: custom_objects,
        comap: comap,
        cdofields: [],
        fade: false
      },
      methods: {
        fetchOptionsmap: function(search, loading) {
          var vm = this;
          const options = {
            method: "GET",
            url: "/eloqua/action/ajax/customobjects/" + this.consumer.installId + "/" + this.consumer.SiteId + "/customObject?search=" + search
          };
          axios(options)
            .then(function(response) {
              vm.comap = response.data.elements;
            })
            .catch(function (error) {
              vm.comap = JSON.parse(JSON.stringify(custom_objects.elements)); 
            });
        },
        getFields() {
          var vm = this;
          if(this.instance.custom_object_id) {
            const options = {
              method: "GET",
              url: "/eloqua/action/ajax/customobject/" + this.consumer.installId + "/" + this.consumer.SiteId + "/" + this.instance.custom_object_id
            };
            axios(options)
              .then(function(response) {
                vm.cdofields = response.data.fields;
              })
              .catch(function (error) {
                console.error(error);
              });
          }
        },
        saveInstance() {
          var vm = this;

          if(!this.instance.custom_object_id) {
            this.instance.email_field = null;
            this.instance.mobile_field = null;
            this.instance.title_field = null;
            this.instance.response_field = null;
          }

          if(this.instance.evaluation_period) {
            const options = {
              method: "POST",
              url: location.pathname + location.search,
              headers: { 'Content-Type': 'application/json' },
              data: JSON.stringify({"instance": vm.instance})
            };
            axios(options)
              .then(function(response) {
                vm.fade = true;
                vm.status = { success: 'Configuration successfully saved' };
                setTimeout(() => {
                  vm.fade = false;
                  vm.status = {};
                }, 3000);
              })
              .catch(function (error) {
                vm.fade = true;
                vm.status = { error: 'Failed to save configuration' };
                setTimeout(() => {
                  vm.fade = false;
                  vm.status = {};
                }, 3000);
              });
          } else {
            vm.status = { error: 'Evaluation period is required' };
            vm.fade = true;
            setTimeout(() => {
              vm.fade = false;
              vm.status = {};
            }, 3000);
          }
        }
      },
      mounted: function () {
        this.getFields();
      }
    });
  </script>
  </body>
</html>